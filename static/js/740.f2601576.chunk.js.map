{"version":3,"file":"static/js/740.f2601576.chunk.js","mappings":"0LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAA0F,6B,SCgC1F,EA7BkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,eAAIH,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXG,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMT,GAHjB,SAKGK,EAAKK,SANsBL,EAAKE,GADxB,KAapB,C,0GCrBD,EAA6B,yBAA7B,EAA8D,oBAA9D,EAA2F,qB,SCoC3F,EAjCa,SAAC,GAAsB,IAApBI,EAAmB,EAAnBA,aACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMZ,UAAWC,EAAkBY,SANhB,SAAAC,GACnBA,EAAMC,iBACNN,EAAaE,EAAMK,cACpB,EAGC,WACE,kBACEhB,UAAWC,EACXgB,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOT,EACPU,SAjBoB,SAAAP,GACxBF,EAASE,EAAMQ,OAAOF,MACvB,KAiBG,mBAAQpB,UAAWC,EAAcgB,KAAK,SAAtC,SAA+C,aAKpD,E,SCQD,EAjCe,WACb,OAAsCP,EAAAA,EAAAA,UAAS,IAA/C,eAAOa,EAAP,KAAoBC,EAApB,KACA,GAA8Bd,EAAAA,EAAAA,WAAS,GAAvC,eAAOe,EAAP,KAAgBC,EAAhB,KACA,GAAwChB,EAAAA,EAAAA,WAAS,GAAjD,eAAOiB,EAAP,KAAqBC,EAArB,KAkBA,OACE,6BACE,SAAC,EAAD,CAAMnB,aAlBW,SAAAoB,GACnBH,GAAW,IAEXI,EAAAA,EAAAA,IAAqBD,GAClBE,MAAK,SAAAC,GACJR,EAAeQ,GACfJ,EAAyC,IAAzBI,EAAcC,OAC/B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPZ,GAAW,EACZ,GACJ,IAKID,IAAW,SAACc,EAAA,EAAD,IACXZ,IACC,uBAAG,4DAEJJ,IAAe,SAACiB,EAAA,EAAD,CAAW3C,MAAO0B,MAGvC,C,+LCnCDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbhB,EAAoB,mCAAG,WAAMiB,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFnD,cAC5BH,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAW,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieList/MovieList.module.css?e64c","pages/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/Services.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__zNzTq\",\"item\":\"MovieList_item__80RFv\",\"movieLink\":\"MovieList_movieLink__pqCVG\"};","import { useLocation, Link } from 'react-router-dom';\nimport style from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={style.list}>\n      {films.map(film => (\n        <li className={style.item} key={film.id}>\n          <Link\n            className={style.movieLink}\n            to={`/movies/${film.id}`}\n            state={{ from: location }}\n          >\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Form_searchForm__eyCyq\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Form.module.css';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <form className={style.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button className={style.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'pages/MovieList/MovieList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'services/Services';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = queryMovie => {\n    setLoading(true);\n\n    fetchSearchByKeyword(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <MovieList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '77375c1461f4bbe6d78772cd5f93d658';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["films","location","useLocation","className","style","map","film","to","id","state","from","title","searchMovies","useState","query","setQuery","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","MovieList","axios","API_KEY","fetchTrending","response","data","results","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}